plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.3.Final"
    springCloudVersion = "2022.0.1"

    springJdbc = "6.1.0"

    testcontainersBom = "1.17.6"
    testcontainersPostgres = "1.19.2"
}

jar {
    enabled = false
}

dependencies {
    implementation project(':api')
    implementation project(':util')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation 'org.liquibase:liquibase-core'
    implementation "org.springframework:spring-jdbc:${springJdbc}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    implementation platform("org.testcontainers:testcontainers-bom:${testcontainersBom}")
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation "org.testcontainers:postgresql:${testcontainersPostgres}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
