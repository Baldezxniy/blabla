server.port: 7003
server.error.include-message: always

# Strongly recommend to set this property to "none" in a production environment!
spring.jpa.hibernate.ddl-auto: none

logging:
  level:
    root: INFO
    com.example: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

spring:
  liquibase:
    enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/review-db"
    username: "postgres"
    password: "password"
    hikari.initializationFailTimeout: 60000
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect

# Spring Cloud SetUp
spring.cloud.function.definition: messageProcessor

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.messageProcessor-in-0:
    destination: reviews
    group: reviewsGroup

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

---
spring.config.activate.on-profile: docker

server.port: 8080

spring.datasource:
  url: jdbc:postgresql://postgres-review-db/review-db
